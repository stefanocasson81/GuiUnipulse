/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <platform/driver/lcd/LCD16bpp.hpp>
#include <gui/sprovegui_screen/SProveGUIView.hpp>
#include <gui/sprovegui_screen/SProveGUIPresenter.hpp>
#include <gui/ssplashscreen_screen/SSplashScreenView.hpp>
#include <gui/ssplashscreen_screen/SSplashScreenPresenter.hpp>
#include <gui/smain_screen/SMainView.hpp>
#include <gui/smain_screen/SMainPresenter.hpp>
#include <gui/sbasic_screen/SBasicView.hpp>
#include <gui/sbasic_screen/SBasicPresenter.hpp>
#include <gui/sweldingprocess_screen/SWeldingProcessView.hpp>
#include <gui/sweldingprocess_screen/SWeldingProcessPresenter.hpp>
#include <gui/ssetup_screen/SSetupView.hpp>
#include <gui/ssetup_screen/SSetupPresenter.hpp>
#include <gui/smenuprincipale_screen/SMenuPrincipaleView.hpp>
#include <gui/smenuprincipale_screen/SMenuPrincipalePresenter.hpp>
#include <gui/shwcheck_screen/SHwCheckView.hpp>
#include <gui/shwcheck_screen/SHwCheckPresenter.hpp>
#include <gui/shwchecktraino_screen/SHwCheckTrainoView.hpp>
#include <gui/shwchecktraino_screen/SHwCheckTrainoPresenter.hpp>
#include <gui/sdebugvar_screen/SDebugVarView.hpp>
#include <gui/sdebugvar_screen/SDebugVarPresenter.hpp>
#include <gui/sinfo_screen/SInfoView.hpp>
#include <gui/sinfo_screen/SInfoPresenter.hpp>
#include <gui/sorologio_screen/SOrologioView.hpp>
#include <gui/sorologio_screen/SOrologioPresenter.hpp>
#include <gui/smenudebug_screen/SMenuDebugView.hpp>
#include <gui/smenudebug_screen/SMenuDebugPresenter.hpp>
#include <gui/smenuadvance_screen/SMenuAdvanceView.hpp>
#include <gui/smenuadvance_screen/SMenuAdvancePresenter.hpp>
#include <gui/supgradefirmware_screen/SUpgradeFirmwareView.hpp>
#include <gui/supgradefirmware_screen/SUpgradeFirmwarePresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(EN);
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
}

/*
 * Screen Transition Declarations
 */

// SSplashScreen

void FrontendApplicationBase::gotoSSplashScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSSplashScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoSSplashScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<SSplashScreenView, SSplashScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// SMain

void FrontendApplicationBase::gotoSMainScreenSlideTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSMainScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoSMainScreenSlideTransitionNorthImpl()
{
    touchgfx::makeTransition<SMainView, SMainPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
