/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>

#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/sprovegui_screen/SProveGUIView.hpp>
#include <gui/sprovegui_screen/SProveGUIPresenter.hpp>
#include <gui/ssplashscreen_screen/SSplashScreenView.hpp>
#include <gui/ssplashscreen_screen/SSplashScreenPresenter.hpp>
#include <gui/smain_screen/SMainView.hpp>
#include <gui/smain_screen/SMainPresenter.hpp>
#include <gui/sbasic_screen/SBasicView.hpp>
#include <gui/sbasic_screen/SBasicPresenter.hpp>
#include <gui/sweldingprocess_screen/SWeldingProcessView.hpp>
#include <gui/sweldingprocess_screen/SWeldingProcessPresenter.hpp>
#include <gui/ssetup_screen/SSetupView.hpp>
#include <gui/ssetup_screen/SSetupPresenter.hpp>
#include <gui/smenuprincipale_screen/SMenuPrincipaleView.hpp>
#include <gui/smenuprincipale_screen/SMenuPrincipalePresenter.hpp>
#include <gui/shwcheck_screen/SHwCheckView.hpp>
#include <gui/shwcheck_screen/SHwCheckPresenter.hpp>
#include <gui/shwchecktraino_screen/SHwCheckTrainoView.hpp>
#include <gui/shwchecktraino_screen/SHwCheckTrainoPresenter.hpp>
#include <gui/sdebugvar_screen/SDebugVarView.hpp>
#include <gui/sdebugvar_screen/SDebugVarPresenter.hpp>
#include <gui/sinfo_screen/SInfoView.hpp>
#include <gui/sinfo_screen/SInfoPresenter.hpp>
#include <gui/sorologio_screen/SOrologioView.hpp>
#include <gui/sorologio_screen/SOrologioPresenter.hpp>
#include <gui/smenudebug_screen/SMenuDebugView.hpp>
#include <gui/smenudebug_screen/SMenuDebugPresenter.hpp>
#include <gui/smenuadvance_screen/SMenuAdvanceView.hpp>
#include <gui/smenuadvance_screen/SMenuAdvancePresenter.hpp>
#include <gui/supgradefirmware_screen/SUpgradeFirmwareView.hpp>
#include <gui/supgradefirmware_screen/SUpgradeFirmwarePresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< SProveGUIView,
            touchgfx::meta::TypeList< SSplashScreenView,
            touchgfx::meta::TypeList< SMainView,
            touchgfx::meta::TypeList< SBasicView,
            touchgfx::meta::TypeList< SWeldingProcessView,
            touchgfx::meta::TypeList< SSetupView,
            touchgfx::meta::TypeList< SMenuPrincipaleView,
            touchgfx::meta::TypeList< SHwCheckView,
            touchgfx::meta::TypeList< SHwCheckTrainoView,
            touchgfx::meta::TypeList< SDebugVarView,
            touchgfx::meta::TypeList< SInfoView,
            touchgfx::meta::TypeList< SOrologioView,
            touchgfx::meta::TypeList< SMenuDebugView,
            touchgfx::meta::TypeList< SMenuAdvanceView,
            touchgfx::meta::TypeList< SUpgradeFirmwareView,
            touchgfx::meta::Nil > > > > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< SProveGUIPresenter,
            touchgfx::meta::TypeList< SSplashScreenPresenter,
            touchgfx::meta::TypeList< SMainPresenter,
            touchgfx::meta::TypeList< SBasicPresenter,
            touchgfx::meta::TypeList< SWeldingProcessPresenter,
            touchgfx::meta::TypeList< SSetupPresenter,
            touchgfx::meta::TypeList< SMenuPrincipalePresenter,
            touchgfx::meta::TypeList< SHwCheckPresenter,
            touchgfx::meta::TypeList< SHwCheckTrainoPresenter,
            touchgfx::meta::TypeList< SDebugVarPresenter,
            touchgfx::meta::TypeList< SInfoPresenter,
            touchgfx::meta::TypeList< SOrologioPresenter,
            touchgfx::meta::TypeList< SMenuDebugPresenter,
            touchgfx::meta::TypeList< SMenuAdvancePresenter,
            touchgfx::meta::TypeList< SUpgradeFirmwarePresenter,
            touchgfx::meta::Nil > > > > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::TypeList< SlideTransition<NORTH>,
            touchgfx::meta::Nil >
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoSSplashScreenScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
