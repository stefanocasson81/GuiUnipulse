/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CSTRUMENTOBASE_HPP
#define CSTRUMENTOBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class CStrumentoBase : public touchgfx::Container
{
public:
    CStrumentoBase();
    virtual ~CStrumentoBase();
    virtual void initialize();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TextArea textArea3;
    touchgfx::Box bBase;
    touchgfx::BoxWithBorder boxWithBorder;
    touchgfx::Box bA;
    touchgfx::Box bV;
    touchgfx::Line line;
    touchgfx::PainterRGB565 linePainter;
    touchgfx::TextArea tAA;
    touchgfx::TextArea tAV;
    touchgfx::TextAreaWithOneWildcard tATensione;
    touchgfx::TextAreaWithOneWildcard tACorrente;
    touchgfx::TextArea tAPuntino;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TATENSIONE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar tATensioneBuffer[TATENSIONE_SIZE];
    static const uint16_t TACORRENTE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar tACorrenteBuffer[TACORRENTE_SIZE];

private:

};

#endif // CSTRUMENTOBASE_HPP
