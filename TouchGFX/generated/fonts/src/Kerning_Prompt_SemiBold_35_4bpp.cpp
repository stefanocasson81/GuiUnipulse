#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_Prompt_SemiBold_35_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0030, -2 },  // (First char = [0x0030, zero], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0034, -2 },  // (First char = [0x0034, four], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0035, -1 },  // (First char = [0x0035, five], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0037, -3 },  // (First char = [0x0037, seven], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x002C, comma], Kerning dist = -4)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x002C, comma], Kerning dist = -6)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0066, -3 },  // (First char = [0x0066, f], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0072, -3 },  // (First char = [0x0072, r], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x0076, -3 },  // (First char = [0x0076, v], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x002C, comma], Kerning dist = -3)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0030, zero], Kerning dist = -1)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0031, one], Kerning dist = -2)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0034, four], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -4)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x0041, A], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0041, A], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004D, -1 },  // (First char = [0x004D, M], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0053, -2 },  // (First char = [0x0053, S], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -4)
    { 0x0055, -2 },  // (First char = [0x0055, U], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -5)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -4)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -5)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0066, -3 },  // (First char = [0x0066, f], Second char = [0x0041, A], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0041, A], Kerning dist = -1)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0076, -3 },  // (First char = [0x0076, v], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x0041, A], Kerning dist = -3)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0042, B], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0042, B], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0042, B], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0042, B], Kerning dist = -1)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0042, B], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0043, C], Kerning dist = -3)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0043, C], Kerning dist = -2)
    { 0x004D, -1 },  // (First char = [0x004D, M], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x0043, C], Kerning dist = -3)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0043, C], Kerning dist = -3)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0044, D], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0044, D], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0044, D], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0044, D], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0044, D], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0045, E], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0049, I], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0049, I], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0049, I], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0049, I], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x004A, J], Kerning dist = -2)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x004A, J], Kerning dist = -3)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x004A, J], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x004A, J], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x004A, J], Kerning dist = -4)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x004A, J], Kerning dist = -2)
    { 0x0066, -4 },  // (First char = [0x0066, f], Second char = [0x004A, J], Kerning dist = -4)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x004A, J], Kerning dist = -2)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0072, -3 },  // (First char = [0x0072, r], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0076, -3 },  // (First char = [0x0076, v], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x004A, J], Kerning dist = -2)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x004A, J], Kerning dist = -3)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x004B, K], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x004D, M], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x004D, M], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x004D, M], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x004D, M], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x004D, M], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x004D, M], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x004E, N], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x004E, N], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x004E, N], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x004E, N], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x004E, N], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x004E, N], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x004E, N], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x004F, O], Kerning dist = -1)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -3)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x004F, O], Kerning dist = -3)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -3)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x004F, O], Kerning dist = -1)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x004F, O], Kerning dist = -2)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0050, P], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0050, P], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0052, R], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0052, R], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0052, R], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0052, R], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0053, S], Kerning dist = -2)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x0053, S], Kerning dist = -2)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0053, S], Kerning dist = -2)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0053, S], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0053, S], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0053, S], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0053, S], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0053, S], Kerning dist = -2)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0053, S], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0053, S], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0053, S], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0053, S], Kerning dist = -2)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0041, -4 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -3)
    { 0x004D, -1 },  // (First char = [0x004D, M], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0054,  1 },  // (First char = [0x0054, T], Second char = [0x0054, T], Kerning dist = 1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0054, T], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0061, -3 },  // (First char = [0x0061, a], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0062, -3 },  // (First char = [0x0062, b], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0063, -3 },  // (First char = [0x0063, c], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0064, -1 },  // (First char = [0x0064, d], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0067, -3 },  // (First char = [0x0067, g], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0069, -1 },  // (First char = [0x0069, i], Second char = [0x0054, T], Kerning dist = -1)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x0054, T], Kerning dist = -3)
    { 0x006C, -1 },  // (First char = [0x006C, l], Second char = [0x0054, T], Kerning dist = -1)
    { 0x006D, -4 },  // (First char = [0x006D, m], Second char = [0x0054, T], Kerning dist = -4)
    { 0x006F, -4 },  // (First char = [0x006F, o], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0071, -4 },  // (First char = [0x0071, q], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0072, -3 },  // (First char = [0x0072, r], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0073, -4 },  // (First char = [0x0073, s], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0074, -2 },  // (First char = [0x0074, t], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0075, -2 },  // (First char = [0x0075, u], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0076, -4 },  // (First char = [0x0076, v], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0077, -4 },  // (First char = [0x0077, w], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0078, -4 },  // (First char = [0x0078, x], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0079, -4 },  // (First char = [0x0079, y], Second char = [0x0054, T], Kerning dist = -4)
    { 0x007A, -4 },  // (First char = [0x007A, z], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0055, U], Kerning dist = -2)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0055, U], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0055, U], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0055, U], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0055, U], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0055, U], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0055, U], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0055, U], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0055, U], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0055, U], Kerning dist = -1)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0041, -5 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -5)
    { 0x0042, -3 },  // (First char = [0x0042, B], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -4)
    { 0x004D, -1 },  // (First char = [0x004D, M], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0053, -2 },  // (First char = [0x0053, S], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0056, V], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0062, -3 },  // (First char = [0x0062, b], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0067, -1 },  // (First char = [0x0067, g], Second char = [0x0056, V], Kerning dist = -1)
    { 0x006A, -2 },  // (First char = [0x006A, j], Second char = [0x0056, V], Kerning dist = -2)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x0056, V], Kerning dist = -3)
    { 0x006C, -1 },  // (First char = [0x006C, l], Second char = [0x0056, V], Kerning dist = -1)
    { 0x006D, -2 },  // (First char = [0x006D, m], Second char = [0x0056, V], Kerning dist = -2)
    { 0x006F, -4 },  // (First char = [0x006F, o], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0071, -2 },  // (First char = [0x0071, q], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0074, -2 },  // (First char = [0x0074, t], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0075, -2 },  // (First char = [0x0075, u], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0076, -4 },  // (First char = [0x0076, v], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0077, -4 },  // (First char = [0x0077, w], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0078, -4 },  // (First char = [0x0078, x], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0079, -4 },  // (First char = [0x0079, y], Second char = [0x0056, V], Kerning dist = -4)
    { 0x007A, -4 },  // (First char = [0x007A, z], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0041, -4 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = -4)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -3)
    { 0x004D, -1 },  // (First char = [0x004D, M], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0053, -2 },  // (First char = [0x0053, S], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0057, W], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0069, -1 },  // (First char = [0x0069, i], Second char = [0x0057, W], Kerning dist = -1)
    { 0x006A, -1 },  // (First char = [0x006A, j], Second char = [0x0057, W], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0057, W], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, m], Second char = [0x0057, W], Kerning dist = -1)
    { 0x006F, -3 },  // (First char = [0x006F, o], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0074, -2 },  // (First char = [0x0074, t], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0075, -2 },  // (First char = [0x0075, u], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0078, -3 },  // (First char = [0x0078, x], Second char = [0x0057, W], Kerning dist = -3)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0057, W], Kerning dist = -2)
    { 0x007A, -2 },  // (First char = [0x007A, z], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0044, -3 },  // (First char = [0x0044, D], Second char = [0x0058, X], Kerning dist = -3)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0058, X], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0058, X], Kerning dist = -1)
    { 0x004D, -1 },  // (First char = [0x004D, M], Second char = [0x0058, X], Kerning dist = -1)
    { 0x004F, -3 },  // (First char = [0x004F, O], Second char = [0x0058, X], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0058, X], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0062, -3 },  // (First char = [0x0062, b], Second char = [0x0058, X], Kerning dist = -3)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0069, -1 },  // (First char = [0x0069, i], Second char = [0x0058, X], Kerning dist = -1)
    { 0x006C, -1 },  // (First char = [0x006C, l], Second char = [0x0058, X], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, m], Second char = [0x0058, X], Kerning dist = -1)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0076, -4 },  // (First char = [0x0076, v], Second char = [0x0058, X], Kerning dist = -4)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x0058, X], Kerning dist = -3)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x0058, X], Kerning dist = -3)
    { 0x007A, -2 },  // (First char = [0x007A, z], Second char = [0x0058, X], Kerning dist = -2)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x002E, -3 },  // (First char = [0x002E, period], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0041, -5 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0042, -3 },  // (First char = [0x0042, B], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0044, -3 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0047, -2 },  // (First char = [0x0047, G], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x004D, -1 },  // (First char = [0x004D, M], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004E, -2 },  // (First char = [0x004E, N], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x004F, -3 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0053, -2 },  // (First char = [0x0053, S], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0061, -3 },  // (First char = [0x0061, a], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0062, -5 },  // (First char = [0x0062, b], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0063, -3 },  // (First char = [0x0063, c], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0064, -1 },  // (First char = [0x0064, d], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0067, -3 },  // (First char = [0x0067, g], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0069, -2 },  // (First char = [0x0069, i], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x006A, -2 },  // (First char = [0x006A, j], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x006D, -3 },  // (First char = [0x006D, m], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x006F, -5 },  // (First char = [0x006F, o], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0071, -2 },  // (First char = [0x0071, q], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0072, -3 },  // (First char = [0x0072, r], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0073, -4 },  // (First char = [0x0073, s], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x0074, -3 },  // (First char = [0x0074, t], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0075, -3 },  // (First char = [0x0075, u], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0076, -4 },  // (First char = [0x0076, v], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x0077, -4 },  // (First char = [0x0077, w], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x0078, -4 },  // (First char = [0x0078, x], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x0079, -4 },  // (First char = [0x0079, y], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x007A, -4 },  // (First char = [0x007A, z], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x005A, Z], Kerning dist = -2)
    { 0x0048, -1 },  // (First char = [0x0048, H], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x005A, Z], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x005A, Z], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x005A, Z], Kerning dist = -2)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x005A, Z], Kerning dist = -3)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -3)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0061, a], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -4)
    { 0x0055, -2 },  // (First char = [0x0055, U], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -3)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -4)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0064, -1 },  // (First char = [0x0064, d], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x0061, a], Kerning dist = -2)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x0061, a], Kerning dist = -2)
    { 0x006D, -1 },  // (First char = [0x006D, m], Second char = [0x0061, a], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0061, a], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0061, a], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0062, b], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0062, b], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0062, b], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0062, b], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0062, b], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0063, c], Kerning dist = -3)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0063, c], Kerning dist = -3)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0063, c], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -4)
    { 0x0055, -2 },  // (First char = [0x0055, U], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0063, c], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0063, c], Kerning dist = -3)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0063, c], Kerning dist = -5)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x0063, c], Kerning dist = -2)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x0063, c], Kerning dist = -2)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0071, -1 },  // (First char = [0x0071, q], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0063, c], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0064, d], Kerning dist = -3)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0064, d], Kerning dist = -3)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0064, d], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0064, d], Kerning dist = -4)
    { 0x0055, -2 },  // (First char = [0x0055, U], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0064, d], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0064, d], Kerning dist = -3)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -4)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0064, -1 },  // (First char = [0x0064, d], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x0064, d], Kerning dist = -2)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x0064, d], Kerning dist = -2)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0064, d], Kerning dist = -2)
    { 0x007A, -2 },  // (First char = [0x007A, z], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0066, f], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0066, f], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0066, f], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0053, -2 },  // (First char = [0x0053, S], Second char = [0x0066, f], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0066, f], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0066, f], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0066, f], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0066, f], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0066, f], Kerning dist = -3)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0066, f], Kerning dist = -2)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0066, f], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0066, f], Kerning dist = -2)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0068, h], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0068, h], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0068, h], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0068, h], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0069, i], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0069, i], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0069, i], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0069, i], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0069, i], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0069, i], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0069, i], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0069, i], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x006A, j], Kerning dist = -2)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x006A, j], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x006A, j], Kerning dist = -2)
    { 0x004D, -1 },  // (First char = [0x004D, M], Second char = [0x006A, j], Kerning dist = -1)
    { 0x004E, -1 },  // (First char = [0x004E, N], Second char = [0x006A, j], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x006A, j], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x006A, j], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x006A, j], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x006A, j], Kerning dist = -2)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x006A, j], Kerning dist = -2)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0064, -1 },  // (First char = [0x0064, d], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x006A, j], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x006A, j], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x006A, j], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x006B, k], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006B, k], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x006C, l], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x006C, l], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x006C, l], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006C, l], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x006C, l], Kerning dist = -1)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x006C, l], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x006E, n], Kerning dist = -2)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x006E, n], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x006E, n], Kerning dist = -3)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x006E, n], Kerning dist = -3)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x006F, o], Kerning dist = -3)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x006F, o], Kerning dist = -3)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x006F, o], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -4)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -5)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0064, -1 },  // (First char = [0x0064, d], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0067, -1 },  // (First char = [0x0067, g], Second char = [0x006F, o], Kerning dist = -1)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x006F, o], Kerning dist = -2)
    { 0x006D, -1 },  // (First char = [0x006D, m], Second char = [0x006F, o], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x006F, o], Kerning dist = -2)
    { 0x007A, -2 },  // (First char = [0x007A, z], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0070, p], Kerning dist = -3)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0070, p], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0070, p], Kerning dist = -3)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0070, p], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0070, p], Kerning dist = -2)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -4)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0072, r], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0072, r], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -3)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0072, r], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0072, r], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0072, r], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0072, r], Kerning dist = -3)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0073, s], Kerning dist = -3)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0073, s], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0073, s], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -4)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0073, s], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0073, s], Kerning dist = -4)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0073, s], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0073, s], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0073, s], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0073, s], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0074, t], Kerning dist = -2)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0074, t], Kerning dist = -1)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x0074, t], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0074, t], Kerning dist = -2)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0074, t], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0074, t], Kerning dist = -2)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0074, t], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0074, t], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0074, t], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0074, t], Kerning dist = -2)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0074, t], Kerning dist = -2)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0074, t], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0074, t], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0074, t], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0075, u], Kerning dist = -3)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -3)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -4)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x0075, u], Kerning dist = -2)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0075, u], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0075, u], Kerning dist = -1)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0041, -3 },  // (First char = [0x0041, A], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0045, -2 },  // (First char = [0x0045, E], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0049, -1 },  // (First char = [0x0049, I], Second char = [0x0076, v], Kerning dist = -1)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x0076, v], Kerning dist = -1)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x0076, v], Kerning dist = -4)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0076, v], Kerning dist = -3)
    { 0x004E, -2 },  // (First char = [0x004E, N], Second char = [0x0076, v], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0053, -2 },  // (First char = [0x0053, S], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0076, v], Kerning dist = -4)
    { 0x0055, -2 },  // (First char = [0x0055, U], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0076, v], Kerning dist = -4)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0058, -4 },  // (First char = [0x0058, X], Second char = [0x0076, v], Kerning dist = -4)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0076, v], Kerning dist = -4)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0064, -1 },  // (First char = [0x0064, d], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0067, -2 },  // (First char = [0x0067, g], Second char = [0x0076, v], Kerning dist = -2)
    { 0x006A, -2 },  // (First char = [0x006A, j], Second char = [0x0076, v], Kerning dist = -2)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x0076, v], Kerning dist = -2)
    { 0x006D, -2 },  // (First char = [0x006D, m], Second char = [0x0076, v], Kerning dist = -2)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0071, -1 },  // (First char = [0x0071, q], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0076, v], Kerning dist = -2)
    { 0x007A, -2 },  // (First char = [0x007A, z], Second char = [0x0076, v], Kerning dist = -2)
    { 0x002C, -1 },  // (First char = [0x002C, comma], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0041, -3 },  // (First char = [0x0041, A], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0045, -2 },  // (First char = [0x0045, E], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0049, -1 },  // (First char = [0x0049, I], Second char = [0x0077, w], Kerning dist = -1)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0077, w], Kerning dist = -3)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0077, w], Kerning dist = -3)
    { 0x004E, -2 },  // (First char = [0x004E, N], Second char = [0x0077, w], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0053, -2 },  // (First char = [0x0053, S], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -4)
    { 0x0055, -2 },  // (First char = [0x0055, U], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0077, w], Kerning dist = -4)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0077, w], Kerning dist = -4)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0064, -1 },  // (First char = [0x0064, d], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0067, -2 },  // (First char = [0x0067, g], Second char = [0x0077, w], Kerning dist = -2)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x0077, w], Kerning dist = -2)
    { 0x006D, -1 },  // (First char = [0x006D, m], Second char = [0x0077, w], Kerning dist = -1)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0071, -1 },  // (First char = [0x0071, q], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0077, w], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0078, x], Kerning dist = -3)
    { 0x0049, -1 },  // (First char = [0x0049, I], Second char = [0x0078, x], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0078, x], Kerning dist = -2)
    { 0x004E, -2 },  // (First char = [0x004E, N], Second char = [0x0078, x], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0053, -2 },  // (First char = [0x0053, S], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0078, x], Kerning dist = -4)
    { 0x0055, -2 },  // (First char = [0x0055, U], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0078, x], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0078, x], Kerning dist = -3)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0078, x], Kerning dist = -4)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0064, -1 },  // (First char = [0x0064, d], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0067, -1 },  // (First char = [0x0067, g], Second char = [0x0078, x], Kerning dist = -1)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x0078, x], Kerning dist = -2)
    { 0x006D, -2 },  // (First char = [0x006D, m], Second char = [0x0078, x], Kerning dist = -2)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0071, -1 },  // (First char = [0x0071, q], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0078, x], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0078, x], Kerning dist = -1)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0041, -3 },  // (First char = [0x0041, A], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0045, -2 },  // (First char = [0x0045, E], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0048, -1 },  // (First char = [0x0048, H], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0049, -1 },  // (First char = [0x0049, I], Second char = [0x0079, y], Kerning dist = -1)
    { 0x004B, -4 },  // (First char = [0x004B, K], Second char = [0x0079, y], Kerning dist = -4)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -3)
    { 0x004E, -2 },  // (First char = [0x004E, N], Second char = [0x0079, y], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0053, -2 },  // (First char = [0x0053, S], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -4)
    { 0x0055, -2 },  // (First char = [0x0055, U], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0079, y], Kerning dist = -4)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0079, y], Kerning dist = -4)
    { 0x005A, -3 },  // (First char = [0x005A, Z], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0064, -2 },  // (First char = [0x0064, d], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0067, -1 },  // (First char = [0x0067, g], Second char = [0x0079, y], Kerning dist = -1)
    { 0x006B, -2 },  // (First char = [0x006B, k], Second char = [0x0079, y], Kerning dist = -2)
    { 0x006D, -2 },  // (First char = [0x006D, m], Second char = [0x0079, y], Kerning dist = -2)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0071, -1 },  // (First char = [0x0071, q], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0074, -1 },  // (First char = [0x0074, t], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0079, y], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x007A, z], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x007A, z], Kerning dist = -4)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x007A, z], Kerning dist = -4)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x007A, z], Kerning dist = -4)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x007A, z], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x007A, z], Kerning dist = -1)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x007A, z], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x007A, z], Kerning dist = -1)
};
